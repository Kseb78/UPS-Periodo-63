/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/MDIApplication.java to edit this template
 */
package ec.edu.ups.poo.practica05gui.vista;

import ec.edu.ups.poo.practica05gui.controlador.*;
import ec.edu.ups.poo.practica05gui.idao.*;
import ec.edu.ups.poo.practica05gui.vista.biblioteca.*;
import ec.edu.ups.poo.practica05gui.dao.*;
import ec.edu.ups.poo.practica05gui.vista.libro.VentanaBuscarLibro;
import ec.edu.ups.poo.practica05gui.vista.libro.VentanaCrearLibro;
import ec.edu.ups.poo.practica05gui.vista.libro.VentanaEditarLibro;
import ec.edu.ups.poo.practica05gui.vista.libro.VentanaEliminarLibro;
import ec.edu.ups.poo.practica05gui.vista.libro.VentanaListarLibro;
import ec.edu.ups.poo.practica05gui.vista.prestamo.VentanaBuscarPrestamo;
import ec.edu.ups.poo.practica05gui.vista.prestamo.VentanaEditarPrestamo;
import ec.edu.ups.poo.practica05gui.vista.prestamo.VentanaEliminarPrestamo;
import ec.edu.ups.poo.practica05gui.vista.prestamo.VentanaListarPrestamo;
import ec.edu.ups.poo.practica05gui.vista.prestamo.VentanaPrestarPrestamo;
import ec.edu.ups.poo.practica05gui.vista.usuario.VentanaCrearUsuario;
import ec.edu.ups.poo.practica05gui.vista.usuario.VentanaBuscarUsuario;
import ec.edu.ups.poo.practica05gui.vista.usuario.VentanaActualizarUsuario;
import ec.edu.ups.poo.practica05gui.vista.usuario.VentanaEliminarUsuario;
import ec.edu.ups.poo.practica05gui.vista.usuario.VentanaListarUsuario;
import java.awt.Graphics;
import java.awt.Image;
import java.util.Locale;
import java.util.ResourceBundle;
import javax.swing.ImageIcon;
import javax.swing.JPanel;


public class VentanaPrincipal extends javax.swing.JFrame {

    private VentanaCrearBiblioteca ventanaCrearBiblioteca;
    private VentanaBuscarBiblioteca ventanaBuscarBiblioteca;
    private VentanaEditarBiblioteca ventanaEditarBiblioteca;
    private VentanaEliminarBiblioteca ventanaEliminarBiblioteca;
    private VentanaListarBiblioteca ventanaListarBiblioteca;
    private VentanaCrearLibro ventanaCrearLibro;
    private VentanaBuscarLibro ventanaBuscarLibro;
    private VentanaEditarLibro ventanaEditarLibro;
    private VentanaEliminarLibro ventanaEliminarLibro;
    private VentanaListarLibro ventanaListarLibro;
    private VentanaCrearUsuario ventanaCrearUsuario;
    private VentanaBuscarUsuario ventanaBuscarUsuario;
    private VentanaActualizarUsuario ventanaActualizarUsuario;
    private VentanaEliminarUsuario ventanaEliminarUsuario;
    private VentanaListarUsuario ventanaListarUsuario;
    private VentanaPrestarPrestamo ventanaPrestarPrestamo;
    private VentanaBuscarPrestamo ventanaBuscarPrestamo;
    private VentanaEditarPrestamo ventanaEditarPrestamo;
    private VentanaEliminarPrestamo ventanaEliminarPrestamo;
    private VentanaListarPrestamo ventanaListarPrestamo;
    
    FondoVentanaPrincipal fondo = new FondoVentanaPrincipal();
    //Declarar e Instanciar los controladores
    private IBibliotecaDAO bibliotecaDAO;
    private BibliotecaControlador bibliotecaControlador;
    private ILibroDAO libroDAO;
    private LibroControlador libroControlador;
    private UsuarioControlador usuarioControlador;
    private IUsuarioDAO usuarioDAO;
    private IPrestamoDAO prestamoDAO;
    private PrestamoControlador prestamoControlador;
    private Locale locale;
    

    public VentanaPrincipal() {
        this.setContentPane(fondo);
        initComponents();//Metodos despues del initComponents
        this.setExtendedState(VentanaPrincipal.MAXIMIZED_BOTH);
        this.setTitle("Sistema de Biblioteca - UPS");
        bibliotecaDAO = new BibliotecaDAO();
        bibliotecaControlador = new BibliotecaControlador(bibliotecaDAO);
        libroDAO = new LibroDAO();
        libroControlador = new LibroControlador(libroDAO,bibliotecaDAO);
        usuarioDAO = new UsuarioDAO();
        usuarioControlador = new UsuarioControlador(usuarioDAO);
        prestamoDAO = new PrestamoDAO();
        prestamoControlador = new PrestamoControlador(prestamoDAO, usuarioDAO, libroDAO, bibliotecaDAO);
        locale = new Locale("es","EC");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Image imagen = new ImageIcon (getClass().getResource("/imagenes/fondoPanel.jpg")).getImage();
        desktopPane = desktopPane = new javax.swing.JDesktopPane()
        {
            public void paintComponent (Graphics g)
            {
                g.drawImage(imagen,0,0,getWidth(),getHeight(),this);
            }
        };
        menuBar = new javax.swing.JMenuBar();
        bibliotecaMenu = new javax.swing.JMenu();
        crearBibliotecaMenuItem = new javax.swing.JMenuItem();
        buscarBibliotecaMenuItem = new javax.swing.JMenuItem();
        editarBibliotecaMenuItem = new javax.swing.JMenuItem();
        eliminarBibliotecaMenuItem = new javax.swing.JMenuItem();
        listarBibliotecaMenuItem = new javax.swing.JMenuItem();
        libroMenu = new javax.swing.JMenu();
        crearLibroMenuItem1 = new javax.swing.JMenuItem();
        buscarLibroMenuItem1 = new javax.swing.JMenuItem();
        editarLibroMenuItem1 = new javax.swing.JMenuItem();
        eliminarLibroMenuItem1 = new javax.swing.JMenuItem();
        listarLibroMenuItem1 = new javax.swing.JMenuItem();
        usuarioMenu = new javax.swing.JMenu();
        crearUsuarioMenuItem = new javax.swing.JMenuItem();
        buscarUsuarioMenuItem = new javax.swing.JMenuItem();
        editarUsuarioMenuItem = new javax.swing.JMenuItem();
        eliminarUsuarioMenuItem = new javax.swing.JMenuItem();
        listarUsuarioMenuItem = new javax.swing.JMenuItem();
        prestamoMenu = new javax.swing.JMenu();
        prestarPrestamoMenuItem = new javax.swing.JMenuItem();
        buscarPrestamoMenuItem = new javax.swing.JMenuItem();
        editarPrestamoMenuItem = new javax.swing.JMenuItem();
        devolverPrestamoMenuItem = new javax.swing.JMenuItem();
        listarPrestamoMenuItem = new javax.swing.JMenuItem();
        opcionesMenu = new javax.swing.JMenu();
        cambiarIdiomaEnglishMenuItem = new javax.swing.JMenuItem();
        cambiarIdiomaSpanishMenuItem = new javax.swing.JMenuItem();
        cambiarIdiomaFrenchMenuItem = new javax.swing.JMenuItem();
        salirOpcionesMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        desktopPane.setBackground(new java.awt.Color(255, 255, 255));
        desktopPane.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 5, true));
        desktopPane.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout desktopPaneLayout = new javax.swing.GroupLayout(desktopPane);
        desktopPane.setLayout(desktopPaneLayout);
        desktopPaneLayout.setHorizontalGroup(
            desktopPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 737, Short.MAX_VALUE)
        );
        desktopPaneLayout.setVerticalGroup(
            desktopPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 411, Short.MAX_VALUE)
        );

        getContentPane().add(desktopPane, java.awt.BorderLayout.CENTER);

        bibliotecaMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/BibliotecaIcon.png"))); // NOI18N
        bibliotecaMenu.setMnemonic('f');
        bibliotecaMenu.setText("Biblioteca");

        crearBibliotecaMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/iconoCrear.png"))); // NOI18N
        crearBibliotecaMenuItem.setMnemonic('o');
        crearBibliotecaMenuItem.setText("Crear");
        crearBibliotecaMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crearBibliotecaMenuItemActionPerformed(evt);
            }
        });
        bibliotecaMenu.add(crearBibliotecaMenuItem);

        buscarBibliotecaMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/iconoBuscar.png"))); // NOI18N
        buscarBibliotecaMenuItem.setText("Buscar");
        buscarBibliotecaMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarBibliotecaMenuItemActionPerformed(evt);
            }
        });
        bibliotecaMenu.add(buscarBibliotecaMenuItem);

        editarBibliotecaMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/iconoEditar.png"))); // NOI18N
        editarBibliotecaMenuItem.setMnemonic('s');
        editarBibliotecaMenuItem.setText("Editar");
        editarBibliotecaMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarBibliotecaMenuItemActionPerformed(evt);
            }
        });
        bibliotecaMenu.add(editarBibliotecaMenuItem);

        eliminarBibliotecaMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/iconoEliminar.png"))); // NOI18N
        eliminarBibliotecaMenuItem.setMnemonic('a');
        eliminarBibliotecaMenuItem.setText("Eliminar");
        eliminarBibliotecaMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarBibliotecaMenuItemActionPerformed(evt);
            }
        });
        bibliotecaMenu.add(eliminarBibliotecaMenuItem);

        listarBibliotecaMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/iconoListar.png"))); // NOI18N
        listarBibliotecaMenuItem.setMnemonic('x');
        listarBibliotecaMenuItem.setText("Listar");
        listarBibliotecaMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listarBibliotecaMenuItemActionPerformed(evt);
            }
        });
        bibliotecaMenu.add(listarBibliotecaMenuItem);

        menuBar.add(bibliotecaMenu);

        libroMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/LibroIcon.png"))); // NOI18N
        libroMenu.setMnemonic('e');
        libroMenu.setText("Libro");

        crearLibroMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/iconoCrear.png"))); // NOI18N
        crearLibroMenuItem1.setMnemonic('o');
        crearLibroMenuItem1.setText("Crear");
        crearLibroMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crearLibroMenuItem1ActionPerformed(evt);
            }
        });
        libroMenu.add(crearLibroMenuItem1);

        buscarLibroMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/iconoBuscar.png"))); // NOI18N
        buscarLibroMenuItem1.setText("Buscar");
        buscarLibroMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarLibroMenuItem1ActionPerformed(evt);
            }
        });
        libroMenu.add(buscarLibroMenuItem1);

        editarLibroMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/iconoEditar.png"))); // NOI18N
        editarLibroMenuItem1.setMnemonic('s');
        editarLibroMenuItem1.setText("Editar");
        editarLibroMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarLibroMenuItem1ActionPerformed(evt);
            }
        });
        libroMenu.add(editarLibroMenuItem1);

        eliminarLibroMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/iconoEliminar.png"))); // NOI18N
        eliminarLibroMenuItem1.setMnemonic('a');
        eliminarLibroMenuItem1.setText("Eliminar");
        eliminarLibroMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarLibroMenuItem1ActionPerformed(evt);
            }
        });
        libroMenu.add(eliminarLibroMenuItem1);

        listarLibroMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/iconoListar.png"))); // NOI18N
        listarLibroMenuItem1.setMnemonic('x');
        listarLibroMenuItem1.setText("Listar");
        listarLibroMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listarLibroMenuItem1ActionPerformed(evt);
            }
        });
        libroMenu.add(listarLibroMenuItem1);

        menuBar.add(libroMenu);

        usuarioMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/UsuarioIcon.png"))); // NOI18N
        usuarioMenu.setMnemonic('h');
        usuarioMenu.setText("Usuario");

        crearUsuarioMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/iconoCrear.png"))); // NOI18N
        crearUsuarioMenuItem.setMnemonic('c');
        crearUsuarioMenuItem.setText("Crear");
        crearUsuarioMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crearUsuarioMenuItemActionPerformed(evt);
            }
        });
        usuarioMenu.add(crearUsuarioMenuItem);

        buscarUsuarioMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/iconoBuscar.png"))); // NOI18N
        buscarUsuarioMenuItem.setMnemonic('a');
        buscarUsuarioMenuItem.setText("Buscar");
        buscarUsuarioMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarUsuarioMenuItemActionPerformed(evt);
            }
        });
        usuarioMenu.add(buscarUsuarioMenuItem);

        editarUsuarioMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/iconoEditar.png"))); // NOI18N
        editarUsuarioMenuItem.setText("Editar");
        editarUsuarioMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarUsuarioMenuItemActionPerformed(evt);
            }
        });
        usuarioMenu.add(editarUsuarioMenuItem);

        eliminarUsuarioMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/iconoEliminar.png"))); // NOI18N
        eliminarUsuarioMenuItem.setText("Eliminar");
        eliminarUsuarioMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarUsuarioMenuItemActionPerformed(evt);
            }
        });
        usuarioMenu.add(eliminarUsuarioMenuItem);

        listarUsuarioMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/iconoListar.png"))); // NOI18N
        listarUsuarioMenuItem.setText("Listar");
        listarUsuarioMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listarUsuarioMenuItemActionPerformed(evt);
            }
        });
        usuarioMenu.add(listarUsuarioMenuItem);

        menuBar.add(usuarioMenu);

        prestamoMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/PrestamoIcon.png"))); // NOI18N
        prestamoMenu.setText("Prestamo");

        prestarPrestamoMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/iconoCrear.png"))); // NOI18N
        prestarPrestamoMenuItem.setText("Prestar");
        prestarPrestamoMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prestarPrestamoMenuItemActionPerformed(evt);
            }
        });
        prestamoMenu.add(prestarPrestamoMenuItem);

        buscarPrestamoMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/iconoBuscar.png"))); // NOI18N
        buscarPrestamoMenuItem.setText("Buscar");
        buscarPrestamoMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarPrestamoMenuItemActionPerformed(evt);
            }
        });
        prestamoMenu.add(buscarPrestamoMenuItem);

        editarPrestamoMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/iconoEditar.png"))); // NOI18N
        editarPrestamoMenuItem.setText("Editar");
        editarPrestamoMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarPrestamoMenuItemActionPerformed(evt);
            }
        });
        prestamoMenu.add(editarPrestamoMenuItem);

        devolverPrestamoMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/iconoEliminar.png"))); // NOI18N
        devolverPrestamoMenuItem.setText("Devolver");
        devolverPrestamoMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                devolverPrestamoMenuItemActionPerformed(evt);
            }
        });
        prestamoMenu.add(devolverPrestamoMenuItem);

        listarPrestamoMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/iconoListar.png"))); // NOI18N
        listarPrestamoMenuItem.setText("Listar");
        listarPrestamoMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listarPrestamoMenuItemActionPerformed(evt);
            }
        });
        prestamoMenu.add(listarPrestamoMenuItem);

        menuBar.add(prestamoMenu);

        opcionesMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/opcionesIcon.png"))); // NOI18N
        opcionesMenu.setText("Opciones");

        cambiarIdiomaEnglishMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/usaIcono.png"))); // NOI18N
        cambiarIdiomaEnglishMenuItem.setText("English");
        cambiarIdiomaEnglishMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cambiarIdiomaEnglishMenuItemActionPerformed(evt);
            }
        });
        opcionesMenu.add(cambiarIdiomaEnglishMenuItem);

        cambiarIdiomaSpanishMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/ecuadorIcono.png"))); // NOI18N
        cambiarIdiomaSpanishMenuItem.setText("Spanish");
        cambiarIdiomaSpanishMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cambiarIdiomaSpanishMenuItemActionPerformed(evt);
            }
        });
        opcionesMenu.add(cambiarIdiomaSpanishMenuItem);

        cambiarIdiomaFrenchMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/franciaIcono.png"))); // NOI18N
        cambiarIdiomaFrenchMenuItem.setText("French");
        cambiarIdiomaFrenchMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cambiarIdiomaFrenchMenuItemActionPerformed(evt);
            }
        });
        opcionesMenu.add(cambiarIdiomaFrenchMenuItem);

        salirOpcionesMenuItem.setText("Salir");
        salirOpcionesMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirOpcionesMenuItemActionPerformed(evt);
            }
        });
        opcionesMenu.add(salirOpcionesMenuItem);

        menuBar.add(opcionesMenu);

        setJMenuBar(menuBar);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void crearLibroMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crearLibroMenuItem1ActionPerformed
        if(ventanaCrearLibro==null)
        {
            ventanaCrearLibro = new VentanaCrearLibro(libroControlador);
        }
        
        if(!ventanaCrearLibro.isVisible())
        {
            ventanaCrearLibro.setVisible(true);
            desktopPane.add(ventanaCrearLibro   );
        }
    }//GEN-LAST:event_crearLibroMenuItem1ActionPerformed

    private void buscarLibroMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarLibroMenuItem1ActionPerformed
        if(ventanaBuscarLibro==null)
        {
            ventanaBuscarLibro = new VentanaBuscarLibro(libroControlador);
        }
        
        if(!ventanaBuscarLibro.isVisible())
        {
            ventanaBuscarLibro.setVisible(true);
            desktopPane.add(ventanaBuscarLibro   );
        }
    }//GEN-LAST:event_buscarLibroMenuItem1ActionPerformed

    private void editarLibroMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarLibroMenuItem1ActionPerformed
        if(ventanaEditarLibro==null)
        {
            ventanaEditarLibro = new VentanaEditarLibro(libroControlador);
        }

        if(!ventanaEditarLibro.isVisible())
        {
            ventanaEditarLibro.setVisible(true);
            desktopPane.add(ventanaEditarLibro   );
        }
    }//GEN-LAST:event_editarLibroMenuItem1ActionPerformed

    private void listarBibliotecaMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listarBibliotecaMenuItemActionPerformed
        if(ventanaListarBiblioteca==null)
        {
            ventanaListarBiblioteca = new VentanaListarBiblioteca(bibliotecaControlador);
        }

        if(!ventanaListarBiblioteca.isVisible())
        {
            ventanaListarBiblioteca.setVisible(true);
            ventanaListarBiblioteca.cargarDatos();
            desktopPane.add(ventanaListarBiblioteca);
        }
    }//GEN-LAST:event_listarBibliotecaMenuItemActionPerformed

    private void eliminarBibliotecaMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarBibliotecaMenuItemActionPerformed
        if(ventanaEliminarBiblioteca==null)
        {
            ventanaEliminarBiblioteca = new VentanaEliminarBiblioteca(bibliotecaControlador);
        }

        if(!ventanaEliminarBiblioteca.isVisible())
        {
            ventanaEliminarBiblioteca.setVisible(true);
            desktopPane.add(ventanaEliminarBiblioteca   );
        }
    }//GEN-LAST:event_eliminarBibliotecaMenuItemActionPerformed

    private void editarBibliotecaMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarBibliotecaMenuItemActionPerformed
        if(ventanaEditarBiblioteca==null)
        {
            ventanaEditarBiblioteca = new VentanaEditarBiblioteca(bibliotecaControlador);
        }

        if(!ventanaEditarBiblioteca.isVisible())
        {
            ventanaEditarBiblioteca.setVisible(true);
            desktopPane.add(ventanaEditarBiblioteca);
        }
    }//GEN-LAST:event_editarBibliotecaMenuItemActionPerformed

    private void buscarBibliotecaMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarBibliotecaMenuItemActionPerformed
        if(ventanaBuscarBiblioteca==null)
        {
            ventanaBuscarBiblioteca = new VentanaBuscarBiblioteca(bibliotecaControlador);
        }

        if(!ventanaBuscarBiblioteca.isVisible())
        {
            ventanaBuscarBiblioteca.setVisible(true);
            desktopPane.add(ventanaBuscarBiblioteca);
        }

    }//GEN-LAST:event_buscarBibliotecaMenuItemActionPerformed

    private void cambiarIdiomaEnglishMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cambiarIdiomaEnglishMenuItemActionPerformed
        locale = new Locale("en","US");
        cambiarIdioma();   
    }//GEN-LAST:event_cambiarIdiomaEnglishMenuItemActionPerformed

    private void cambiarIdiomaSpanishMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cambiarIdiomaSpanishMenuItemActionPerformed
        locale = new Locale("es","EC");
        cambiarIdioma();     
    }//GEN-LAST:event_cambiarIdiomaSpanishMenuItemActionPerformed

    private void crearUsuarioMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crearUsuarioMenuItemActionPerformed
        if(ventanaCrearUsuario==null)
        {
            ventanaCrearUsuario = new VentanaCrearUsuario(usuarioControlador);
        }

        if(!ventanaCrearUsuario.isVisible())
        {
            ventanaCrearUsuario.setVisible(true);
            desktopPane.add(ventanaCrearUsuario);
        }
    }//GEN-LAST:event_crearUsuarioMenuItemActionPerformed

    private void eliminarLibroMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarLibroMenuItem1ActionPerformed
        if(ventanaEliminarLibro==null)
        {
            ventanaEliminarLibro = new VentanaEliminarLibro(libroControlador);
        }

        if(!ventanaEliminarLibro.isVisible())
        {
            ventanaEliminarLibro.setVisible(true);
            desktopPane.add(ventanaEliminarLibro);
        }
    }//GEN-LAST:event_eliminarLibroMenuItem1ActionPerformed

    private void listarLibroMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listarLibroMenuItem1ActionPerformed
        if(ventanaListarLibro==null)
        {
            ventanaListarLibro = new VentanaListarLibro(libroControlador);
        }

        if(!ventanaListarLibro.isVisible())
        {
            ventanaListarLibro.setVisible(true);
            ventanaListarLibro.cargarDatos();
            desktopPane.add(ventanaListarLibro);
        }
    }//GEN-LAST:event_listarLibroMenuItem1ActionPerformed

    private void buscarUsuarioMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarUsuarioMenuItemActionPerformed
        if(ventanaBuscarUsuario==null)
        {
            ventanaBuscarUsuario = new VentanaBuscarUsuario(usuarioControlador);
        }

        if(!ventanaBuscarUsuario.isVisible())
        {
            ventanaBuscarUsuario.setVisible(true);
            desktopPane.add(ventanaBuscarUsuario);
        }
    }//GEN-LAST:event_buscarUsuarioMenuItemActionPerformed

    private void editarUsuarioMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarUsuarioMenuItemActionPerformed
        if(ventanaActualizarUsuario==null)
        {
            ventanaActualizarUsuario = new VentanaActualizarUsuario(usuarioControlador);
        }

        if(!ventanaActualizarUsuario.isVisible())
        {
            ventanaActualizarUsuario.setVisible(true);
            desktopPane.add(ventanaActualizarUsuario);
        }
    }//GEN-LAST:event_editarUsuarioMenuItemActionPerformed

    private void eliminarUsuarioMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarUsuarioMenuItemActionPerformed
        if(ventanaEliminarUsuario==null)
        {
            ventanaEliminarUsuario = new VentanaEliminarUsuario(usuarioControlador);
        }

        if(!ventanaEliminarUsuario.isVisible())
        {
            ventanaEliminarUsuario.setVisible(true);
            desktopPane.add(ventanaEliminarUsuario);
        }
    }//GEN-LAST:event_eliminarUsuarioMenuItemActionPerformed

    private void listarUsuarioMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listarUsuarioMenuItemActionPerformed
        if(ventanaListarUsuario==null)
        {
            ventanaListarUsuario = new VentanaListarUsuario(usuarioControlador);
        }

        if(!ventanaListarUsuario.isVisible())
        {
            ventanaListarUsuario.setVisible(true);
            ventanaListarUsuario.cargarDatos();
            desktopPane.add(ventanaListarUsuario);
        }
    }//GEN-LAST:event_listarUsuarioMenuItemActionPerformed

    private void cambiarIdiomaFrenchMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cambiarIdiomaFrenchMenuItemActionPerformed
        locale = new Locale("fr","FR");
        cambiarIdioma();   
    }//GEN-LAST:event_cambiarIdiomaFrenchMenuItemActionPerformed

    private void salirOpcionesMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirOpcionesMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_salirOpcionesMenuItemActionPerformed

    private void prestarPrestamoMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prestarPrestamoMenuItemActionPerformed
        if(ventanaPrestarPrestamo==null)
        {
            ventanaPrestarPrestamo = new VentanaPrestarPrestamo(prestamoControlador);
        }

        if(!ventanaPrestarPrestamo.isVisible())
        {
            ventanaPrestarPrestamo.setVisible(true);
            desktopPane.add(ventanaPrestarPrestamo);
        }        
    }//GEN-LAST:event_prestarPrestamoMenuItemActionPerformed

    private void buscarPrestamoMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarPrestamoMenuItemActionPerformed
        if(ventanaBuscarPrestamo==null)
        {
            ventanaBuscarPrestamo = new VentanaBuscarPrestamo(prestamoControlador);
        }

        if(!ventanaBuscarPrestamo.isVisible())
        {
            ventanaBuscarPrestamo.setVisible(true);
            desktopPane.add(ventanaBuscarPrestamo);
        } 
    }//GEN-LAST:event_buscarPrestamoMenuItemActionPerformed

    private void editarPrestamoMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarPrestamoMenuItemActionPerformed
        if(ventanaEditarPrestamo==null)
        {
            ventanaEditarPrestamo = new VentanaEditarPrestamo(prestamoControlador);
        }

        if(!ventanaEditarPrestamo.isVisible())
        {
            ventanaEditarPrestamo.setVisible(true);
            desktopPane.add(ventanaEditarPrestamo);
        } 
    }//GEN-LAST:event_editarPrestamoMenuItemActionPerformed

    private void devolverPrestamoMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_devolverPrestamoMenuItemActionPerformed
        if(ventanaEliminarPrestamo==null)
        {
            ventanaEliminarPrestamo = new VentanaEliminarPrestamo(prestamoControlador);
        }

        if(!ventanaEliminarPrestamo.isVisible())
        {
            ventanaEliminarPrestamo.setVisible(true);
            desktopPane.add(ventanaEliminarPrestamo);
        } 
    }//GEN-LAST:event_devolverPrestamoMenuItemActionPerformed

    private void listarPrestamoMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listarPrestamoMenuItemActionPerformed
        if(ventanaListarPrestamo==null)
        {
            ventanaListarPrestamo = new VentanaListarPrestamo(prestamoControlador);
        }

        if(!ventanaListarPrestamo.isVisible())
        {
            ventanaListarPrestamo.setVisible(true);
            ventanaListarPrestamo.cargarDatos();
            desktopPane.add(ventanaListarPrestamo);
        } 
    }//GEN-LAST:event_listarPrestamoMenuItemActionPerformed

    private void crearBibliotecaMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crearBibliotecaMenuItemActionPerformed
        if(ventanaCrearBiblioteca==null)
        {
            ventanaCrearBiblioteca = new VentanaCrearBiblioteca(bibliotecaControlador);
            ventanaCrearBiblioteca.cambiarIdioma(locale);
        }
        if(!ventanaCrearBiblioteca.isVisible())
        {
            ventanaCrearBiblioteca.setVisible(true);
            desktopPane.add(ventanaCrearBiblioteca);
        }

    }//GEN-LAST:event_crearBibliotecaMenuItemActionPerformed

    public void cambiarIdioma()
    {
        ResourceBundle mensajes = ResourceBundle.getBundle("mensajes.mensajes",locale);
        opcionesMenu.setText(mensajes.getString("opcionesMenu"));
        //biblioteca
        bibliotecaMenu.setText(mensajes.getString("bibliotecaMenu"));   
        crearBibliotecaMenuItem.setText(mensajes.getString("crearBibliotecaMenuItem"));
        buscarBibliotecaMenuItem.setText(mensajes.getString("buscarBibliotecaMenuItem"));
        editarBibliotecaMenuItem.setText(mensajes.getString("editarBibliotecaMenuItem"));
        eliminarBibliotecaMenuItem.setText(mensajes.getString("eliminarBibliotecaMenuItem"));
        listarBibliotecaMenuItem.setText(mensajes.getString("listarBibliotecaMenuItem"));
        //libro
        libroMenu.setText(mensajes.getString("libroMenu"));   
        crearLibroMenuItem1.setText(mensajes.getString("crearLibroMenuItem1"));
        buscarLibroMenuItem1.setText(mensajes.getString("buscarLibroMenuItem1"));
        editarLibroMenuItem1.setText(mensajes.getString("editarLibroMenuItem1"));
        eliminarLibroMenuItem1.setText(mensajes.getString("eliminarLibroMenuItem1"));
        listarLibroMenuItem1.setText(mensajes.getString("listarLibroMenuItem1"));
        //prestamo
        prestamoMenu.setText(mensajes.getString("prestamoMenu"));   
        prestarPrestamoMenuItem.setText(mensajes.getString("prestarPrestamoMenuItem"));
        buscarPrestamoMenuItem.setText(mensajes.getString("buscarPrestamoMenuItem"));
        editarPrestamoMenuItem.setText(mensajes.getString("editarPrestamoMenuItem"));
        devolverPrestamoMenuItem.setText(mensajes.getString("devolverPrestamoMenuItem"));
        listarPrestamoMenuItem.setText(mensajes.getString("listarPrestamoMenuItem"));
        //usuario
        usuarioMenu.setText(mensajes.getString("usuarioMenu"));   
        crearUsuarioMenuItem.setText(mensajes.getString("crearUsuarioMenuItem"));
        buscarUsuarioMenuItem.setText(mensajes.getString("buscarUsuarioMenuItem"));
        editarUsuarioMenuItem.setText(mensajes.getString("editarUsuarioMenuItem"));
        eliminarUsuarioMenuItem.setText(mensajes.getString("eliminarUsuarioMenuItem"));
        listarUsuarioMenuItem.setText(mensajes.getString("listarUsuarioMenuItem"));
        
        if(ventanaCrearBiblioteca != null){
           ventanaCrearBiblioteca.cambiarIdioma(locale);
        }
        if(ventanaBuscarBiblioteca != null){
           ventanaBuscarBiblioteca.cambiarIdioma(locale);
        }   
        if(ventanaEditarBiblioteca != null){
           ventanaEditarBiblioteca.cambiarIdioma(locale);
        }
        if(ventanaEliminarBiblioteca != null){
           ventanaEliminarBiblioteca.cambiarIdioma(locale);
        }
        if(ventanaBuscarLibro != null){
           ventanaBuscarLibro.cambiarIdioma(locale);
        }
        if(ventanaCrearLibro != null){
           ventanaCrearLibro.cambiarIdioma(locale);
        }
        if(ventanaEditarLibro != null){
           ventanaEditarLibro.cambiarIdioma(locale);
        }
        if(ventanaEliminarLibro != null){
           ventanaEliminarLibro.cambiarIdioma(locale);
        }
        if(ventanaActualizarUsuario != null){
           ventanaActualizarUsuario.cambiarIdioma(locale);
        }
        if(ventanaBuscarUsuario != null){
           ventanaBuscarUsuario.cambiarIdioma(locale);
        }
        if(ventanaCrearUsuario != null){
           ventanaCrearUsuario.cambiarIdioma(locale);
        }
        if(ventanaEliminarUsuario != null){
           ventanaEliminarUsuario.cambiarIdioma(locale);
        }
        if(ventanaBuscarPrestamo != null){
           ventanaBuscarPrestamo.cambiarIdioma(locale);
        }
        if(ventanaEditarPrestamo != null){
           ventanaEditarPrestamo.cambiarIdioma(locale);
        }
        if(ventanaEliminarPrestamo != null){
           ventanaEliminarPrestamo.cambiarIdioma(locale);
        }
         if(ventanaPrestarPrestamo != null){
           ventanaPrestarPrestamo.cambiarIdioma(locale);
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu bibliotecaMenu;
    private javax.swing.JMenuItem buscarBibliotecaMenuItem;
    private javax.swing.JMenuItem buscarLibroMenuItem1;
    private javax.swing.JMenuItem buscarPrestamoMenuItem;
    private javax.swing.JMenuItem buscarUsuarioMenuItem;
    private javax.swing.JMenuItem cambiarIdiomaEnglishMenuItem;
    private javax.swing.JMenuItem cambiarIdiomaFrenchMenuItem;
    private javax.swing.JMenuItem cambiarIdiomaSpanishMenuItem;
    private javax.swing.JMenuItem crearBibliotecaMenuItem;
    private javax.swing.JMenuItem crearLibroMenuItem1;
    private javax.swing.JMenuItem crearUsuarioMenuItem;
    private javax.swing.JDesktopPane desktopPane;
    private javax.swing.JMenuItem devolverPrestamoMenuItem;
    private javax.swing.JMenuItem editarBibliotecaMenuItem;
    private javax.swing.JMenuItem editarLibroMenuItem1;
    private javax.swing.JMenuItem editarPrestamoMenuItem;
    private javax.swing.JMenuItem editarUsuarioMenuItem;
    private javax.swing.JMenuItem eliminarBibliotecaMenuItem;
    private javax.swing.JMenuItem eliminarLibroMenuItem1;
    private javax.swing.JMenuItem eliminarUsuarioMenuItem;
    private javax.swing.JMenu libroMenu;
    private javax.swing.JMenuItem listarBibliotecaMenuItem;
    private javax.swing.JMenuItem listarLibroMenuItem1;
    private javax.swing.JMenuItem listarPrestamoMenuItem;
    private javax.swing.JMenuItem listarUsuarioMenuItem;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenu opcionesMenu;
    private javax.swing.JMenu prestamoMenu;
    private javax.swing.JMenuItem prestarPrestamoMenuItem;
    private javax.swing.JMenuItem salirOpcionesMenuItem;
    private javax.swing.JMenu usuarioMenu;
    // End of variables declaration//GEN-END:variables
    
    class FondoVentanaPrincipal extends JPanel      
    {
        private Image imagen;
        
        @Override
        public void paint(Graphics g)
        {
            imagen = new ImageIcon (getClass().getResource("/imagenes/fondoSecundario.jpg")).getImage();
            
            g.drawImage(imagen, 0, 0, getWidth(), getHeight(), this);
            
            setOpaque(false);
            super.paint(g); 
        }
    }
    
    
}
